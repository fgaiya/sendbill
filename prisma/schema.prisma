generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  phone     String?
  address   String?
  company   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  invoices  Invoice[]

  @@map("clients")
}

model Invoice {
  id          String        @id @default(cuid())
  number      String        @unique
  title       String
  clientId    String
  issueDate   DateTime
  dueDate     DateTime
  status      InvoiceStatus @default(DRAFT)
  subtotal    Decimal       @db.Decimal(10, 2) @default(0)
  taxAmount   Decimal       @db.Decimal(10, 2) @default(0)
  totalAmount Decimal       @db.Decimal(10, 2) @default(0)
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  items       InvoiceItem[]
  // TODO: MVP後にRestrictまたはソフトデリートの検討
  client      Client        @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@index([clientId])
  @@index([status])
  @@map("invoices")
}

model InvoiceItem {
  id        String   @id @default(cuid())
  invoiceId String
  name      String
  quantity  Int
  unitPrice Decimal  @db.Decimal(10, 2) @default(0)
  amount    Decimal  @db.Decimal(10, 2) @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // TODO: 請求書削除時の挙動を業務フローに合わせて見直す
  invoice   Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@index([invoiceId])
  @@map("invoice_items")
}

enum InvoiceStatus {
  DRAFT
  SENT
  PAID
  OVERDUE
  CANCELLED
}
